<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pro01.myblog.mapper.DraftMapper">

    <insert id="insertDraft" parameterType="com.pro01.myblog.pojo.ArticleDraft" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO article_drafts
        (user_id, title, content, summary, category, cover_url, tags_json,
         prompt_dismissed, is_deleted, create_time, last_edit_time)
        VALUES
            (#{userId}, #{title}, #{content}, #{summary}, #{category}, #{coverUrl}, #{tagsJson},
             #{promptDismissed}, #{isDeleted}, NOW(), NOW())
    </insert>

    <update id="updateDraftByIdAndUser">
        UPDATE article_drafts
        SET
            title = #{title},
            content = #{content},
            summary = #{summary},
            category = #{category},
            cover_url = #{coverUrl},
            tags_json = #{tagsJson},
            prompt_dismissed = FALSE,
            last_edit_time = NOW()
        WHERE id = #{id}
          AND user_id = #{userId}
          AND is_deleted = FALSE
    </update>

    <!-- 统计当前用户未删除草稿总数 -->
    <select id="countByUser" resultType="long">
        SELECT COUNT(*)
        FROM article_drafts
        WHERE user_id = #{userId}
          AND is_deleted = FALSE
    </select>

    <!-- 分页查询：未删除、按最近编辑时间倒序 -->
    <select id="selectPageByUser" resultType="com.pro01.myblog.pojo.ArticleDraft">
        SELECT
        id,
        user_id       AS userId,
        title,
        content,
        summary,
        category,
        cover_url     AS coverUrl,
        CAST(tags_json AS CHAR) AS tagsJson,  <!-- JSON 列映射为 String；如用 MySQL 8 可不 CAST -->
        prompt_dismissed AS promptDismissed,
        is_deleted    AS isDeleted,
        create_time   AS createTime,
        last_edit_time AS lastEditTime
        FROM article_drafts
        WHERE user_id = #{userId}
        AND is_deleted = FALSE
        ORDER BY last_edit_time DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 统计：当前用户 + 未删除 + title/content 模糊 -->
    <select id="countByUserAndLike" resultType="long">
        SELECT COUNT(*)
        FROM article_drafts
        WHERE user_id = #{userId}
          AND is_deleted = FALSE
          AND (
            title   LIKE #{like} ESCAPE '\\'
                OR content LIKE #{like} ESCAPE '\\'
            )
    </select>

    <!-- 分页：当前用户 + 未删除 + 模糊匹配，按最近编辑倒序 -->
    <select id="selectPageByUserAndLike" resultType="com.pro01.myblog.pojo.ArticleDraft">
        SELECT
            id,
            user_id       AS userId,
            title,
            content,
            summary,
            category,
            cover_url     AS coverUrl,
            CAST(tags_json AS CHAR) AS tagsJson,
            prompt_dismissed AS promptDismissed,
            is_deleted    AS isDeleted,
            create_time   AS createTime,
            last_edit_time AS lastEditTime
        FROM article_drafts
        WHERE user_id = #{userId}
          AND is_deleted = FALSE
          AND (
            title   LIKE #{like} ESCAPE '\\'
                OR content LIKE #{like} ESCAPE '\\'
            )
        ORDER BY last_edit_time DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>


</mapper>